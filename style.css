* {
    margin: 0;
    padding: 0;
    font-family: 'Poppins', sans-serif;
    box-sizing: border-box;
    box-sizing: border-box
        /* | box-sizing attribute
|-- Defines width/height including padding and border
|
|-- Real-world Uses
    |-- Form Inputs (maintains consistent width)
    |-- Responsive Layouts (prevents overflow in grids)
    |-- Buttons (keeps button size consistent) */

}

body {
    background: #222;
}

.card {
    width: 90%;
    max-width: 470px;
    background: linear-gradient(135deg, #00feba, #5b548a);
    color: #fff;
    margin: 100px auto 0;
    border-radius: 20px;
    padding: 40px 35px;
    text-align: center;
}

.search {
    width: 100%;
    /*search class will take the entire width assigned for card class*/
    display: flex;
    /* in flex : main-axis-> horz axis(by default) */
    align-items: center;
    /*it alligns item in center considering 
    cross-axis which is vetical axis by default*/

    justify-content: space-between;
    /*justify content attribute helps
    us to aligns flex-box items along main axis(i.e x axis here)*/
}

.search input {
    border: 0;
    outline: 0;
    /* This removes the outline that appears when the input field is focused (i.e., when the user clicks or tabs into the input field). This is usually a default feature to indicate that
     the field is active. Without this, there would be no visible outline when the user interacts with the input. */
    background: #ebfffc;
    color: #555;
    padding: 10px 25px;
    height: 60px;
    border-radius: 30px;
    flex: 1;
    /* it makes the layout more responsive and adaptable */

    /* ;this property is applied onn items inside flex container */

/* The flex: 1 property is a shorthand for flex-grow: 1, flex-shrink: 1, and flex-basis: 0. It is used in a flex c
container to make an element flexible and take up the available space proportionally. */
    margin-right: 16px;
    font-size: 18px;
}


.search button{
    border: 0;
    outline: 0;
    background: #ebfffc;
    border-radius: 50%;
     width: 60px;
    height: 60px;
    /* . Since the buttonâ€™s width
     and height are equal (60px by 60px), the border-radius of 50% creates a perfect circle. */
    cursor: pointer; 
}

.search button img{
    width: 16px;
}

.weather-icon{
    /* <!-- use alt+z to contain content within the width of monitor--> */
    /* By specifying the width, you ensure that the image does not exceed this size, maintaining a consistent look regardless of the original size of the image file */
    /* The weather icon (e.g., a cloud, sun, or rain icon) needs to be consistent in size regardless of the screen size or device, so setting a fixed width helps maintain this uniform appearance. */
    
    width: 170px;
    margin-top: 30px;
    /* This adds a 30-pixel space above the weather icon image, pushing it down from the element above it. */

}

.weather h1{
    font-size: 80px;
    font-weight: 500;
}
.weather h2{
    font-size: 45px;
    font-weight: 400;
    margin-top: -10px;
}

.details{
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 20px;
    margin-top: 50px;
}
 .col{
    display: flex;
    align-items: flex-start;
    text-align: left;
}

.col img{
    width: 40px;
    margin-right: 10px;
}

.humidity, .wind{
    font-size: 28px;
    margin-top: -6px;
}
/*
.weather{
    display: none;
}
.error{
    text-align: left;
    margin-left: 10px;
    font-size: 14px;
    margin-top: 10px;
    display: none;
} 

 .watch-link{
   position: absolute;
   bottom: 5%;
   right: 5%;
   color: #fff;
   text-decoration: none;
 }
 